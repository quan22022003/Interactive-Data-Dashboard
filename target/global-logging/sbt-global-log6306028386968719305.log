[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Eclipse Adoptium Java 21.0.1)
[debug] Load.defaultLoad until apply took 2.9281ms
[debug]                 Load.loadUnit: plugins took 26.2691ms
[debug]                 Load.loadUnit: defsScala took 0.0048ms
[debug] [Loading] Scanning directory C:\Quan\Data Dashboard\project\project
[debug]                   Load.loadUnit: mkEval took 0.406ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Quan\Data Dashboard\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.564 ms
[info] loading settings for project data-dashboard-build-build from metals.sbt ...
[debug]                     Load.resolveProject(data-dashboard-build-build) took 16.7389ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id data-dashboard-build-build, base: C:\Quan\Data Dashboard\project\project, plugins: List(<none>))) took 18.8695ms
[debug] [Loading] Done in C:\Quan\Data Dashboard\project\project, returning: (data-dashboard-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 47.6991ms
[debug]                 Load.loadUnit: cleanEvalClasses took 2.9057ms
[debug]               Load.loadUnit(file:/C:/Quan/Data%20Dashboard/project/project/, ...) took 77.6992ms
[debug]             Load.apply: load took 78.9949ms
[debug]             Load.apply: resolveProjects took 0.1121ms
[debug]             Load.apply: finalTransforms took 9.2484ms
[debug]             Load.apply: config.delegates took 0.4416ms
[debug]             Load.apply: Def.make(settings)... took 42.4941ms
[debug]             Load.apply: structureIndex took 16.0606ms
[debug]             Load.apply: mkStreams took 0.0039ms
[info] loading project definition from C:\Quan\Data Dashboard\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 449.2237ms
[debug]           Load.loadUnit: defsScala took 0.005ms
[debug] [Loading] Scanning directory C:\Quan\Data Dashboard\project
[debug]             Load.loadUnit: mkEval took 0.3464ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Quan\Data Dashboard\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1164 ms
[info] loading settings for project data-dashboard-build from metals.sbt,idea1.sbt ...
[debug]               Load.resolveProject(data-dashboard-build) took 29.7081ms
[debug]             Load.loadTransitive: finalizeProject(Project(id data-dashboard-build, base: C:\Quan\Data Dashboard\project, plugins: List(<none>))) took 32.4381ms
[debug] [Loading] Done in C:\Quan\Data Dashboard\project, returning: (data-dashboard-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 65.8687ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.705ms
[debug]         Load.loadUnit(file:/C:/Quan/Data%20Dashboard/project/, ...) took 522.6062ms
[debug]       Load.apply: load took 524.2774ms
[debug]       Load.apply: resolveProjects took 0.1281ms
[debug]       Load.apply: finalTransforms took 15.3927ms
[debug]       Load.apply: config.delegates took 0.3897ms
[debug]       Load.apply: Def.make(settings)... took 59.6342ms
[debug]       Load.apply: structureIndex took 27.9107ms
[debug]       Load.apply: mkStreams took 0.0047ms
[info] loading project definition from C:\Quan\Data Dashboard\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[success] Generated .bloop\data-dashboard-build.json
[success] Total time: 1 s, completed 16:54:00, 27 thg 3, 2024
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1392.1823ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Quan\Data Dashboard
[debug]       Load.loadUnit: mkEval took 0.1601ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.3455 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 32.3217ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Quan\Data Dashboard, plugins: List(<none>))) took 34.1662ms
[debug] [Loading] Done in C:\Quan\Data Dashboard, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 75.7752ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.0017ms
[debug]   Load.loadUnit(file:/C:/Quan/Data%20Dashboard/, ...) took 1476.6251ms
[debug] Load.apply: load took 1478.1445ms
[debug] Load.apply: resolveProjects took 0.0804ms
[debug] Load.apply: finalTransforms took 12.2196ms
[debug] Load.apply: config.delegates took 0.1561ms
[debug] Load.apply: Def.make(settings)... took 30.7205ms
[debug] Load.apply: structureIndex took 9.9255ms
[debug] Load.apply: mkStreams took 0.0039ms
[info] set current project to CS-C2120 Quan's Data Dashboard (in build file:/C:/Quan/Data%20Dashboard/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
